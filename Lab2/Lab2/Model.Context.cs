//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PERSONNELEntities : DbContext
    {
        public PERSONNELEntities()
            : base("name=PERSONNELEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<departments> departments { get; set; }
        public virtual DbSet<official_inf> official_inf { get; set; }
        public virtual DbSet<personal_inf> personal_inf { get; set; }
        public virtual DbSet<posts> posts { get; set; }
        public virtual DbSet<specialty> specialty { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<EMPLOYEE> EMPLOYEE { get; set; }
    
        public virtual int AddOfficial_inf(Nullable<int> idEmployee, Nullable<int> personalNum, string surname, string name, string patronymic, Nullable<int> idDep, Nullable<int> idPost, string education, Nullable<int> idSpec, string experience, string phoneNum, Nullable<int> wage, Nullable<System.DateTime> date_employment, Nullable<System.DateTime> date_dismissal)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("idEmployee", idEmployee) :
                new ObjectParameter("idEmployee", typeof(int));
    
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("patronymic", patronymic) :
                new ObjectParameter("patronymic", typeof(string));
    
            var idDepParameter = idDep.HasValue ?
                new ObjectParameter("idDep", idDep) :
                new ObjectParameter("idDep", typeof(int));
    
            var idPostParameter = idPost.HasValue ?
                new ObjectParameter("idPost", idPost) :
                new ObjectParameter("idPost", typeof(int));
    
            var educationParameter = education != null ?
                new ObjectParameter("education", education) :
                new ObjectParameter("education", typeof(string));
    
            var idSpecParameter = idSpec.HasValue ?
                new ObjectParameter("idSpec", idSpec) :
                new ObjectParameter("idSpec", typeof(int));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("phoneNum", phoneNum) :
                new ObjectParameter("phoneNum", typeof(string));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("wage", wage) :
                new ObjectParameter("wage", typeof(int));
    
            var date_employmentParameter = date_employment.HasValue ?
                new ObjectParameter("date_employment", date_employment) :
                new ObjectParameter("date_employment", typeof(System.DateTime));
    
            var date_dismissalParameter = date_dismissal.HasValue ?
                new ObjectParameter("date_dismissal", date_dismissal) :
                new ObjectParameter("date_dismissal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOfficial_inf", idEmployeeParameter, personalNumParameter, surnameParameter, nameParameter, patronymicParameter, idDepParameter, idPostParameter, educationParameter, idSpecParameter, experienceParameter, phoneNumParameter, wageParameter, date_employmentParameter, date_dismissalParameter);
        }
    
        public virtual int AddPersonal_inf(Nullable<int> personalNum, Nullable<System.DateTime> dateBirth, string placeBirth, string passport, string address, string regAddress, string maritalStat, Nullable<int> children)
        {
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            var dateBirthParameter = dateBirth.HasValue ?
                new ObjectParameter("dateBirth", dateBirth) :
                new ObjectParameter("dateBirth", typeof(System.DateTime));
    
            var placeBirthParameter = placeBirth != null ?
                new ObjectParameter("placeBirth", placeBirth) :
                new ObjectParameter("placeBirth", typeof(string));
    
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var regAddressParameter = regAddress != null ?
                new ObjectParameter("regAddress", regAddress) :
                new ObjectParameter("regAddress", typeof(string));
    
            var maritalStatParameter = maritalStat != null ?
                new ObjectParameter("maritalStat", maritalStat) :
                new ObjectParameter("maritalStat", typeof(string));
    
            var childrenParameter = children.HasValue ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPersonal_inf", personalNumParameter, dateBirthParameter, placeBirthParameter, passportParameter, addressParameter, regAddressParameter, maritalStatParameter, childrenParameter);
        }
    
        public virtual int DeleteOINF(Nullable<int> personalNum)
        {
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOINF", personalNumParameter);
        }
    
        public virtual int DeletePINF(Nullable<int> personalNum)
        {
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePINF", personalNumParameter);
        }
    
        public virtual ObjectResult<GetEmployee_Result> GetEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployee_Result>("GetEmployee");
        }
    
        public virtual ObjectResult<GetEmployeeById_Result> GetEmployeeById(Nullable<int> personalNum)
        {
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeById_Result>("GetEmployeeById", personalNumParameter);
        }
    
        public virtual ObjectResult<ProcEmployee_Result> ProcEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcEmployee_Result>("ProcEmployee");
        }
    
        public virtual int UpdateOINF(Nullable<int> idEmployee, Nullable<int> personalNum, string surname, string name, string patronymic, Nullable<int> idDep, Nullable<int> idPost, string education, Nullable<int> idSpec, string experience, string phoneNum, Nullable<int> wage, Nullable<System.DateTime> date_employment, Nullable<System.DateTime> date_dismissal)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("idEmployee", idEmployee) :
                new ObjectParameter("idEmployee", typeof(int));
    
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("patronymic", patronymic) :
                new ObjectParameter("patronymic", typeof(string));
    
            var idDepParameter = idDep.HasValue ?
                new ObjectParameter("idDep", idDep) :
                new ObjectParameter("idDep", typeof(int));
    
            var idPostParameter = idPost.HasValue ?
                new ObjectParameter("idPost", idPost) :
                new ObjectParameter("idPost", typeof(int));
    
            var educationParameter = education != null ?
                new ObjectParameter("education", education) :
                new ObjectParameter("education", typeof(string));
    
            var idSpecParameter = idSpec.HasValue ?
                new ObjectParameter("idSpec", idSpec) :
                new ObjectParameter("idSpec", typeof(int));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("phoneNum", phoneNum) :
                new ObjectParameter("phoneNum", typeof(string));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("wage", wage) :
                new ObjectParameter("wage", typeof(int));
    
            var date_employmentParameter = date_employment.HasValue ?
                new ObjectParameter("date_employment", date_employment) :
                new ObjectParameter("date_employment", typeof(System.DateTime));
    
            var date_dismissalParameter = date_dismissal.HasValue ?
                new ObjectParameter("date_dismissal", date_dismissal) :
                new ObjectParameter("date_dismissal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOINF", idEmployeeParameter, personalNumParameter, surnameParameter, nameParameter, patronymicParameter, idDepParameter, idPostParameter, educationParameter, idSpecParameter, experienceParameter, phoneNumParameter, wageParameter, date_employmentParameter, date_dismissalParameter);
        }
    
        public virtual int UpdatePINF(Nullable<int> personalNum, Nullable<System.DateTime> dateBirth, string placeBirth, string passport, string address, string regAddress, string maritalStat, Nullable<int> children)
        {
            var personalNumParameter = personalNum.HasValue ?
                new ObjectParameter("personalNum", personalNum) :
                new ObjectParameter("personalNum", typeof(int));
    
            var dateBirthParameter = dateBirth.HasValue ?
                new ObjectParameter("dateBirth", dateBirth) :
                new ObjectParameter("dateBirth", typeof(System.DateTime));
    
            var placeBirthParameter = placeBirth != null ?
                new ObjectParameter("placeBirth", placeBirth) :
                new ObjectParameter("placeBirth", typeof(string));
    
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var regAddressParameter = regAddress != null ?
                new ObjectParameter("regAddress", regAddress) :
                new ObjectParameter("regAddress", typeof(string));
    
            var maritalStatParameter = maritalStat != null ?
                new ObjectParameter("maritalStat", maritalStat) :
                new ObjectParameter("maritalStat", typeof(string));
    
            var childrenParameter = children.HasValue ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePINF", personalNumParameter, dateBirthParameter, placeBirthParameter, passportParameter, addressParameter, regAddressParameter, maritalStatParameter, childrenParameter);
        }
    }
}
